/*const Livro = require('./../lib/projeto/livro');

class LivrosController {
    livrosDao: any;
    constructor(livrosDao) {
        this.livrosDao = livrosDao;
    }
    
    async index(req, res) {
        let livros = await this.livrosDao.listar();
        
    }

    async pagina(req, res) {
        let [ url, queryString ] = req.url.split('?');
        console.log(url);
        let urlList = url.split('/');
        url = urlList[1];
        let pagina = urlList[2];

        let livros = await this.livrosDao.listar(pagina);
    }

    async listar(req, res) {
        let livros = await this.livrosDao.listar();
    }
    
    async inserir(req, res) {
        let livro = await this.getLivroDaRequisicao(req);
        console.log(livro);
        console.log('teste1');
        try {
            this.livrosDao.inserir(livro);
            utils.renderizarJSON(res, {
                livro,
                mensagem: 'mensagem_livro_cadastrado'
            });
        } catch (e) {
            utils.renderizarJSON(res, {
                mensagem: e.message
            }, 400);
        }
    }

    async ver(req, res) {
        let [ url, queryString ] = req.url.split('?');
        let urlList = url.split('/');
        url = urlList[1];
        let id = urlList[2];      
        let livro = await this.livrosDao.ver(id);
        utils.renderizarJSON(res, livro);
    }

    async alterar(req, res) {
        console.log('teste');
        let livro = await this.getLivroDaRequisicao(req);
        console.log(livro);
        let [ url, queryString ] = req.url.split('?');
        let urlList = url.split('/');
        url = urlList[1];
        let id = urlList[2];
        console.log(id);
        try {
            this.livrosDao.alterar(id, livro);
            utils.renderizarJSON(res, {
                mensagem: 'mensagem_livro_alterado'
            });
        } catch (e) {
            utils.renderizarJSON(res, {
                mensagem: e.message
            }, 400);
        }
    }
    
    apagar(req, res) {
        console.log('teste');
        let [ url, queryString ] = req.url.split('?');
        console.log(url);
        let urlList = url.split('/');
        url = urlList[1];
        let id = urlList[2];
        console.log(id);
        this.livrosDao.apagar(id);
        utils.renderizarJSON(res, {
            mensagem: 'mensagem_livro_apagado',
            id: id
        });
    }

    async getLivroDaRequisicao(req) {
        let corpo = await utils.getCorpo(req);
        console.log(corpo);
        let livro = new Livro(
            corpo.data,
            corpo.autor,
            corpo.texto
        );
        return livro;
    }
}

module.exports = LivrosController;
*/
